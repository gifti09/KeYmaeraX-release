/****************************/
/* WARNING: UNFINISHED FILE */
/* NOT SUPPOSED TO COMPILE  */
/* OR TO PROVE              */
/****************************/

Functions.
  R abs(R).
  R min(R, R).
  R max(R, R).
End.

ProgramVariables.
  /** Variables **/
   /* horizontal */
  R rv.   /* relative speed -(vi - vo) */
   /* vertical */
  R h.    /* relative altitude in ft */
          /* if negative: the intruder is lower than the ownship */
          /* h := hi - ho */
          /* z = h */
  R dhd.  /* vertical velocity of ownship */
  R dhf.  /* target minimum velocity */
  R w.    /* velocity bound 1 = lower, -1 = upper */
  R ao.   /* vertical acceleration of ownship */
  /** Constants **/
  R hp.   /* puck height */
  R rp.   /* puck radius */
  R a.    /* minimal vertical acceleration. Typically g/4 */

  R ro.
  R ho.
  R tl.    /* sign means forever if strictly negative or time limited if non-negative */
  R to. /* if tl is non-negative, tl-to is how long we follow the advisory */
        /* if tl is strictly negative, then the value of tlmto does not matter */
        /* if tl is non-negative, and tl-to is strictly negative, we follow the advisory
	   for negative time, which means we have nothing to follow. */

  R t.     /* time reference with t=0 from the beg  */ 
  R r.     /* distance from fixed intruder to own-ship referenced to own ship position at t=0 */
End.


/* P -> ((T|(A&B))<->C) */

Problem.
((hp > 0 & rp >= 0 & rv >= 0 & a > 0) & (w=-1 | w=1)) -> (
(
  (tl-to<0 & tl >= 0)|
  (((w * dhf >= 0) ->
    ((((-rp <= r) & (r  <  -rp - rv * min(0, w * dhd) / a)) &
     (r <= - rp + rv*(tl-to) | tl < 0)) ->
        (w * rv^2 * (h) < a / 2 * (r + rp)^2 +
                           w * rv * dhd * (r + rp) - rv^2 * hp))
    &
    ((((-rp - rv * min(0, w * dhd) / a <= r) &
      (r <= rp - rv * min(0, w * dhd) / a)) &
     (-min(0, w * dhd) /a <= (tl-to) | tl < 0)) ->
        (w * (h)  <  (- min(0, w * dhd)^2) / (2 * a) - hp))
    &
    ((((rp - rv * min(0, w * dhd) / a  <  r) &
      (r <= rp + rv * max(0, w * (dhf - dhd)) / a)) &
     (r <= rp + rv*(tl-to) | tl < 0)) ->
        (w * rv^2 * (h)  <  a / 2 * (r - rp)^2 +
                           w * rv * dhd * (r - rp) - rv^2 * hp))
    &
    (((rp + rv * max(0, w * (dhf - dhd)) / a  <  r) &
     (r <= rp + rv*(tl-to) | tl < 0)) ->
        (rv = 0) |
        (w * rv * (h)  <  w * dhf * (r - rp)
               - rv * max(0, w * (dhf - dhd))^2 / (2 * a) - rv * hp))
  )
  &
  ((w * dhf < 0) ->
    ((((-rp <= r) &
      (r < -rp + rv * max(0, w * (dhf - dhd)) / a)) &
     (r < -rp + rv*(tl-to) | tl < 0)) ->
        (w * rv^2 * (h)  <  a / 2 * (r + rp)^2
                         + w * rv * dhd * (r + rp) - rv^2 * hp))
    &
    (((-rp + rv * max(0, w * (dhf - dhd)) / a  <=  r) &
     (r < -rp + rv*(tl-to) | tl < 0)) ->
        (rv = 0 & r > rp) |
        (w * rv * (h)  <  w * dhf * (r + rp)
               - rv * max(0, w * (dhf - dhd))^2 / (2 * a) - rv * hp))
    &
    ((((-rp + rv*(tl-to) <= r) &
      (r <= rp + rv*(tl-to))) & (tl >= 0)) ->
     (tl-to<0|(0<=tl-to)&
     ((tl-to) <= max(0, w*(dhf - dhd))/a)&
      (w*h  <  a/2*(tl-to)^2 + w*dhd*(tl-to) - hp)|
     ((tl-to) >  max(0, w*(dhf - dhd))/a)&
      (w*h  <  w*dhf*(tl-to) - max(0, w*(dhf - dhd))^2/(2*a) - hp))
    )))
) <->
(

 \forall t \forall ro \forall ho
 ((t<=tl-to | tl<0) &
  ((0 <= t & t < max(0, w * (dhf - dhd)) / a &
    ro = rv * t & ho = (w * a) / 2 * t^2 + dhd * t) |
   (t >= max(0, w * (dhf - dhd)) / a &
    ro = rv * t & ho = dhf * t - w * max(0, w * (dhf - dhd))^2 / (2*a)))
  -> (abs(r - ro) > rp | w * h < w * ho - hp))
	 
))
End.
