/**
Implicit formulation in paper:

A(t,h_n,v,w,v_lo) <=>
  (0 <= t & t < max(0, w * (v_lo - v)) / a_lo & h_n = (w * a_lo) / 2 * t^2 + v * t) |
  (t >= max(0, w * (v_lo - v)) / a_lo & h_n = v_lo * t - w * max(0, w * (v_lo - v))^2 / (2*a_lo))

B^d(t,h_n,v) <=> 0 <= t < max(0,d) /\ h_n = - w * a^d/2 * t^2 + v * t
const <=> h^d = - w * a^d/2 * max(0,d)^2 + v * max (0,d) /\ v^d - v = -wa^d*max(0,d)

D^d_impl (r,h,v,w,v_lo) <=>
\forall t,r_n,h_n,h^d,v^d
  r_n = r_v * t /\
  ( B^d (t,h_n,v) \/
    const /\ A(t-max(0,d), h_n - h^d,v,w,v_lo))
  ->
    |r -r_n| > r_p \/ w(h-h_n) < -h_p

*/

/** Implicit condition with max and abs
(
    \forall t \forall rt \forall ht \forall hd \forall dhd
    (
        (rt  = rv * t &
        (0 <= t & t < max(0,d) & ht = -(w*ad)/(2)*t^2 + dho*t |
        (hd  = -(w*ad)/(2)* max(0,d)^2+ dho*max(0,d) & dhd-dho = -w*ad* max(0,d)) &
        ( 0<=t-max(0,d) & t-max(0,d) < (max(0,w*(dhf-dhd)))/(ar) & ht-hd  =(w*ar)/(2)*(t-max(0,d))^2+ dhd * (t-max(0,d)) |
        t-max(0,d) >= (max(0,w*(dhf-dhd)))/(ar) & ht-hd =dhf*(t-max(0,d))-(w*max(0,w*(dhf-dhd))^2)/(2*ar) )))
        -> ( abs(r-rt) > rp |  w*(h-ht)  < -hp)
    )
)
*/

Functions.
  R abs(R).
  R max(R, R).
  R min(R, R).
End.

ProgramVariables.
  /** Variables **/
   /* time */
  R tl.   /* time for the loop. only used to say we have to get out after 1s */
  R d.    /* delay state
   /* horizontal */
  R r.    /* relative distance */
  R rv.   /* relative speed -(vi - vo) */
  R a.    /* relative vertical acceleration of ownship */
   /* vertical */
  R h.    /* relative altitude in ft */
          /* if negative: the intruder is lower than the ownship */
          /* h := hi - ho and z = h */
  R dho.  /* vertical velocity of ownship */
  R dhi.  /* vertical velocity of intruder */
  R dhf.  /* target minimum velocity */
  R w.    /* velocity bound 1 = lower, -1 = upper (direction flag) */
  /** Constants **/
  R hp.   /* puck half-height, typically 200ft */
  R rp.   /* puck radius, typically 1,000ft */
  R dp.   /* max allowable pilot delay, typically 5 seconds */
  R dl.   /* max system (loop) delay, typically 1 second */
  R ad.   /* maximum pilot acceleration during delay */
  R ar.   /* minimum acceleration during resolution, typically g/4 or g/3 */

  R t.
  R rt.
  R ht.
  R hd.
  R dhd.
End.

Problem.
  rp >= 0 & hp > 0 & rv >= 0 & ar > 0 & ad >= 0 & dp>=0 & dl>=0 & (w=-1|w=1) &
  (
    \forall t \forall rt \forall ht \forall hd \forall dhd
    (
        (rt  = rv * t &
        (0 <= t & t < max(0,d) & ht = -(w*ad)/(2)*t^2 + dho*t |
        (hd  = -(w*ad)/(2)* max(0,d)^2+ dho*max(0,d) & dhd-dho = -w*ad* max(0,d)) &
        ( 0<=t-max(0,d) & t-max(0,d) < (max(0,w*(dhf-dhd)))/(ar) & ht-hd  =(w*ar)/(2)*(t-max(0,d))^2+ dhd * (t-max(0,d)) |
        t-max(0,d) >= (max(0,w*(dhf-dhd)))/(ar) & ht-hd =dhf*(t-max(0,d))-(w*max(0,w*(dhf-dhd))^2)/(2*ar) )))
        -> ( abs(r-rt) > rp |  w*(h-ht)  < -hp)
    )
  )
  ->
  [ {
    {
      {?true; ++
      {dhf := *; {w:=-1; ++ w:=1;};
      {d := dp; ++ d := dp + dl;};
        ?(
            \forall t \forall rt \forall ht \forall hd \forall dhd
            (
                (rt  = rv * t &
                (0 <= t & t < max(0,d) & ht = -(w*ad)/(2)*t^2 + dho*t |
                (hd  = -(w*ad)/(2)* max(0,d)^2+ dho*max(0,d) & dhd-dho = -w*ad* max(0,d)) &
                ( 0<=t-max(0,d) & t-max(0,d) < (max(0,w*(dhf-dhd)))/(ar) & ht-hd  =(w*ar)/(2)*(t-max(0,d))^2+ dhd * (t-max(0,d)) |
                t-max(0,d) >= (max(0,w*(dhf-dhd)))/(ar) & ht-hd =dhf*(t-max(0,d))-(w*max(0,w*(dhf-dhd))^2)/(2*ar) )))
                -> ( abs(r-rt) > rp |  w*(h-ht)  < -hp)
            )
        );}}
      {a := *; ?(w * a >= -ad); tl := 0;}
    }
    { r' = -rv, h' = -dho, dho' = a, d' = -1, tl' = 1 & ((tl <= dl) & ((d <= 0)-> (w * dho >= w * dhf | w * a >= ar)))}
  }* ]
  (((abs(r) > rp) | (abs(h) > hp)) &
    (
        \forall t \forall rt \forall ht \forall hd \forall dhd
        (
            (rt  = rv * t &
            (0 <= t & t < max(0,d) & ht = -(w*ad)/(2)*t^2 + dho*t |
            (hd  = -(w*ad)/(2)* max(0,d)^2+ dho*max(0,d) & dhd-dho = -w*ad* max(0,d)) &
            ( 0<=t-max(0,d) & t-max(0,d) < (max(0,w*(dhf-dhd)))/(ar) & ht-hd  =(w*ar)/(2)*(t-max(0,d))^2+ dhd * (t-max(0,d)) |
            t-max(0,d) >= (max(0,w*(dhf-dhd)))/(ar) & ht-hd =dhf*(t-max(0,d))-(w*max(0,w*(dhf-dhd))^2)/(2*ar) )))
            -> ( abs(r-rt) > rp |  w*(h-ht)  < -hp)
        )
    )
  )

End.
