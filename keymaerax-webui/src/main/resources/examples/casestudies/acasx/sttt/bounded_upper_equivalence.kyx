/**
 * Created by kghorbal on 10/31/2015
 * @author Khalil Ghorbal
 */

Functions.
  R abs(R).
  R min(R, R).
  R max(R, R).
End.

ProgramVariables.
  /** Variables **/
   /* horizontal */
  R r.    /* relative distance in ft; xi - xo */
          /* x = r */
  R rv.   /* relative speed -(vi - vo) */
   /* vertical */
  R h.    /* relative altitude in ft */
          /* if negative: the intruder is lower than the ownship */
          /* h := hi - ho */
          /* z = h */
  R dhd.  /* vertical velocity of ownship */
  R dhfM.  /* taMget maximum velocity */
  R w.    /* velocity bound 1 = lower, -1 = upper */
  R ao.   /* vertical acceleration of ownship */
  /** Constants **/
  R hp.   /* puck height */
  R rp.   /* puck radius */
  R aM.   /* maximum vertical acceleration. Typically g/3 or g/2 */
  R to.
  R tl.

  R t.
  R ro.
  R ho.
End.

Problem.
(hp > 0 & rp >= 0 & rv >= 0 & aM > 0) & (w=-1 | w=1) & (to<=tl | tl<0) -> (
(
 (w * (dhd + w * max(0, w * (dhfM - dhd))) > 0 ->
  (
   ((-rp <= r & r <= rp) -> w * h > hp)
   &
   ((rp < r & r <= rp + rv * max(0, w*(dhfM - dhd))/aM & (r <= rp + rv * (tl-to) | tl < 0))  ->
    (w * rv^2 * h > aM/2 * (r - rp)^2 + w * rv * dhd * (r - rp) + rv^2 * hp))
   &
   ((-rp <= r & r < -rp + rv * max(0, w*(dhfM - dhd))/aM  & (r <= -rp + rv * (tl-to) | tl < 0)) ->
    (w * rv^2 * h > aM/2 * (r + rp)^2 + w * rv * dhd * (r + rp) + rv^2 * hp))
   &
   ((-rp + rv * max(0, w*(dhfM - dhd))/aM <= r & (r < -rp + rv*(tl-to) | tl<0)) -> 
    ((rv = 0 & r > rp) |
     w * rv * h > w * (dhd + w * max(0, w * (dhfM - dhd))) * (r + rp) - rv * max(0, w*(dhfM - dhd))^2 / (2*aM) + rv*hp))
   &
   ((-rp + rv*(tl-to) <= r & r<= rp + rv*(tl-to))-> 
    (tl < 0 |
     (
      (rv = 0 & r > rp) | 
      ((max(0, w*(dhfM - dhd))/aM <= (tl-to) -> w * h > w * (dhd + w * max(0, w * (dhfM - dhd))) * (tl-to) - max(0, w*(dhfM - dhd))^2 / (2*aM)  + hp) 
      &
      (max(0, w*(dhfM - dhd))/aM > (tl-to) -> w * h > aM/2 * (tl-to)^2 + w * dhd * (tl-to) + hp))
     ))
   )
   ))
  &
  ((w * (dhd + w * max(0, w * (dhfM - dhd))) <= 0) ->
    ((-rp <= r & r <= rp) -> w * h > hp)
    &
    ((rp < r & r <= rp + rv * max(0, w*(dhfM - dhd))/aM & (r <= rp + rv * (tl-to) | tl < 0)) ->
      w * rv^2 * h > aM/2 * (r - rp)^2 + w * rv * dhd * (r - rp) + rv^2 * hp)
    &
    ((rp + rv * max(0, w*(dhfM - dhd))/aM < r & (r<=rp + rv*(tl-to) | tl < 0)) ->
     (rv = 0 |
      w * rv * h > w * (dhd + w * max(0, w * (dhfM - dhd))) * (r - rp) - rv * max(0, w*(dhfM - dhd))^2 / (2*aM) + rv*hp))
    )
) <->
(
  \forall t \forall ro \forall ho
  ((t<=tl-to | tl<0) &
   ((0 <= t & t < max(0, w * (dhfM - dhd)) / aM &
    ro = rv * t & ho = (w * aM) / 2 * t^2 + dhd * t) |
   (t >= max(0, w * (dhfM - dhd)) / aM &
    ro = rv * t &
    ho = (dhd + w * max(0, w * (dhfM-dhd))) * t
          - w * max(0, w * (dhfM - dhd))^2 / (2*aM)))
   -> (abs(r - ro) > rp | w * h > w * ho + hp))
)
)
End.
