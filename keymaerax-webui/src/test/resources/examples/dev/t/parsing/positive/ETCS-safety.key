/**
 * Essentials of European Train Control System (ETCS)
 * @see "Andre Platzer. Differential dynamic logic for hybrid systems. Journal of Automated Reasoning, 41(2), pages 143-189, 2008."
 * @provable
 */
Functions.
  R ep.
  R b.
  R A.
  R drive.
  R brake.
End.

ProgramVariables.
  R SB.
  R a.
  R v.
  R z.
  R t.
  R d.
  R do.
  R m.
  R mo.
  R state.
  R vdes.
End.

Problem.
 (drive = 0 & brake = 1 & state = drive & v^2 - d^2 <= 2*b*(m-z) & d >=0 & b > 0 & A >= 0 & ep >= 0)
  ->
[ 
{ /* begin loop */
  {
    {
      do:= d; 
      mo:=m; 
    
      m := *; 
      d := *; 
      vdes:=*;   
      ?d >= 0 & do^2 - d^2 <= 2*b*(m-mo) & vdes >= 0;
    }
    ++ 
    state := brake;
  }
  ++
  {
    state := drive;
  }
    /*{
        {{?v <= vdes; a:=*; ?a >=-b & a <= A}
        ++ {?v >= vdes; a:=*; ?a <0 & a >= -b}};
        SB := (v^2 - d^2)/(2*b) + (A/b+1)*(A/2*ep^2+ep*v);
        {{?(m - z <= SB | state = brake); a:= -b;} ++ ?!(m - z <= SB | state = brake); };
        {z_0:=z; v_0:=v; z:=*; v:=*; t:=*; ?z=1/2*a*t^2 + v_0*t + z_0 & v=a*t+v_0 & (v >= 0 & t <= ep)}
       }
       */
}*
] (z >= m -> v <= d)
End.
