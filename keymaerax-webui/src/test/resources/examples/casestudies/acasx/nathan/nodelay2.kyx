Functions.
  R max(R,R).
  R abs(R).
  B Cimpl(R,R,R,R,R).
End.
ProgramVariables.
  /** Variables **/
   /* horizontal */
  R r.    /* relative distance in ft; xi - xo
          // x = r */
  R rv.   /* relative speed -(vi - vo) */
   /* vertical */
  R h.    /* relative altitude in ft
          // if negative: the intruder is lower than the ownship
          // h := hi - ho
          // z = h*/
  R dhd.  /* vertical velocity of ownship */
  R dhf.  /* target minimum velocity */
  R w.    /* velocity bound 1 = lower, -1 = upper */
  R ao. /* vertical acceleration of ownship */
  /** Constants **/
  R hp.   /* puck height */
  R rp.   /* puck radius */
  R a.    /* minimal vertical acceleration. Typically g/4 */

  R t.
  R ro.
  R ho.
End.

Problem.
  (
    hp > 0 & 
    rp > 0 & 
    rv >= 0 & 
    a > 0 &
    (w=-1 | w=1) & 
    (\forall t \forall ro \forall ho (((0 <= t & t < max(0, w * (dhf - dhd)) / a & ro = rv * t & ho = (w * a) / 2 * t^2 + dhd * t) | (t >=  max(0, w * (dhf - dhd)) / a & ro = rv * t & ho = dhf * t - w * max(0, w * (dhf - dhd))^2 / (2*a)) -> (abs(r - ro) > rp | w * h < w * ho - hp))) )
  ) 
  ->
    [
      {
        {
          ?true; 
          ++
          dhf :=*; 
          {w := -1; ++ w := 1;}
          ?((\forall t \forall ro \forall ho (((0 <= t & t < max(0, w * (dhf - dhd)) / a & ro = rv * t & ho = (w * a) / 2 * t^2 + dhd * t) | (t >=  max(0, w * (dhf - dhd)) / a & ro = rv * t & ho = dhf * t - w * max(0, w * (dhf - dhd))^2 / (2*a)) -> (abs(r - ro) > rp | w * h < w * ho - hp))) ));
        }
        ao :=*;
        { r' = -rv, dhd' = ao, h' = -dhd & w * dhd >= w * dhf | w * ao >= a}
      }*
    ](
      (abs(h) > hp | abs(r) > rp) &
      (\forall t \forall ro \forall ho (((0 <= t & t < max(0, w * (dhf - dhd)) / a & ro = rv * t & ho = (w * a) / 2 * t^2 + dhd * t) | (t >=  max(0, w * (dhf - dhd)) / a & ro = rv * t & ho = dhf * t - w * max(0, w * (dhf - dhd))^2 / (2*a)) -> (abs(r - ro) > rp | w * h < w * ho - hp))) )
  )
End.

