Functions.
  R ep.   /* time limit for control decisions */
  R A.
  R B.
End.

ProgramVariables.
  R xl.
  R vl.
  R al.
  R xlr.
  R vlr.
  R xf.
  R vf.
  R af.
  R t.    /* time */
  R xl0.
  R vl0.
  R xlr0.
  R vlr0.
End.

Problem.
    ep > 0
  & A >= 0
  & B > 0
  & t = 0
  & vf >= 0
  & xf < xl & xf + vf^2/(2*B) < xl + vl^2/(2*B)
  & xl = xl0
  & vl = vl0
  & xlr = xlr0
  & vlr = vlr0
  & xlr = xl
  & vlr = vl
  & 0 <= vl
  ->
  [
    {
      {
        /* control leader */
        al :=*; ?-B <= al & al <= A;
        /* control follower */
        {
           af := -B;
        ++ ?vf=0; af:=0;
        ++ ?xf + vf^2/(2*B) + (A/B+1)*(A/2*ep^2 + ep*vf) < xlr + vlr^2/(2*B); af :=*; ?-B <= af & af <= A;
        }
      }
      ++
      {
        /* control follower */
        {
           af := -B;
        ++ ?vf=0; af:=0;
        ++ ?xf + vf^2/(2*B) + (A/B+1)*(A/2*ep^2 + ep*vf) < xlr + vlr^2/(2*B); af :=*; ?-B <= af & af <= A;
        }
        /* control leader */
        al :=*; ?-B <= al & al <= A;
      }

      xl0 := xl;
      vl0 := vl;
      xlr0 := xlr;
      vlr0 := vlr;

    	t := 0;

      /* dynamics */
      { xf' = vf,
        vf' = af,
        xl' = vl,
        vl' = al,
        t' = 1 & vf >= 0 & vl >= 0 & t <= ep
      }

      xlr := xl;
      vlr := vl;
    }*
  ] (xf < xl)
End.