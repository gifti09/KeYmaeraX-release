Functions.
  R g.      /* gravity */
  R ep.     /* time limit for control decisions */
  R B.      /* minimum braking capability of the aircraft */
  R A.      /* maximum acceleration -B <= a <= A */
  R W.      /* maximum roll rate of -W <= w <= W */
  R Theta.  /* maximum roll angle */
  R Vmin.   /* minimum cruising speed */
  R abs(R). /* predefined function of absolute value */
  R dZ.     /* aircraft orientation: z component of the maximum roll angle Theta // dZ = cos(Theta) */
  R dXY.    /* aircraft orientation: x-y plane component of the maximum roll angle Theta // dXY = sin(Theta) */
  R r.      /* radius for the loiting circle // r = (Vmin^2)/(g*tanTheta) */
End.

ProgramVariables.
  R xo.     /* obstacle position: xo */
  R yo.     /* obstacle position: yo */
  R x.      /* aircraft position: x */
  R y.      /* aircraft position: y */
  R v.      /* aircraft velocity in x-y plane */
  R t.      /* time */
  R a.      /* aircraft acceleration in x-y plane */
  R dx.     /* aircraft orientation: x component of heading psi // dx = cos(psi) */
  R dy.     /* aircraft orientation: y component of heading psi // dy = sin(psi) */
  R dz.     /* aircraft orientation: z component of roll angle theta // dz = cos(theta) */
  R dxy.    /* aircraft orientation: x-y plane component of roll angle theta // dxy = sin(theta) */
  R theta.  /* roll angle */
  R w.      /* roll rate */
End.

Problem.
  dx^2+dy^2 = 1
  & dz^2+dxy^2 = 1
  & g > 0
  & A >= 0
  & B > 0
  & Vmin > 0
  & v >= Vmin
  & ep > 0
  & W > 0
  & Theta > 0
  & theta <= Theta
  & theta >= -Theta
  & dZ > 0
  & dXY > 0
  & dZ^2+dXY^2 = 1
  & r = Vmin^2/(g*(dXY/dZ))
  & (((abs(x-xo)>(v^2-Vmin^2)/(2*B)+2*r & abs(x-xo)>(v^2-Vmin^2)/(2*B)+Vmin*((Theta-abs(theta))/W-(v-Vmin)/B)+2*r) | (abs(y-yo)>(v^2-Vmin^2)/(2*B)+2*r & abs(y-yo)>(v^2-Vmin^2)/(2*B)+Vmin*((Theta-abs(theta))/W-(v-Vmin)/B)+2*r))
       | (v=Vmin & theta>=0 & theta<Theta & (abs(x-xo)>Vmin*(Theta-theta)/W+2*r | abs(y-yo)>Vmin*(Theta-theta)/W+2*r))
       | (v=Vmin & theta<0 & theta>-Theta & (abs(x-xo)>Vmin*(Theta+theta)/W+2*r | abs(y-yo)>Vmin*(Theta+theta)/W+2*r))
       | (v=Vmin & theta=Theta & dxy=dXY & dz=dZ & (abs(x-xo-r*dy)>r | abs(y-yo+r*dx)>r))
       | (v=Vmin & theta=-Theta & dxy=-dXY & dz=dZ & (abs(x-xo+r*dy)>r | abs(y-yo-r*dx)>r)))
  ->
  [
  {
    {
      {
        /* make a circle */
        {
          {
          /* control the acceleration */
          {{ ?v = Vmin; a := 0; }
          ++
          { ?v > Vmin; a := -B; }};

          /* control the roll angle */
          /* follow a circle */
          {{ ?theta = Theta; w :=0; }
          ++
          { ?theta = -Theta; w :=0; }
          ++
          /* or turn right to circle */
          { ?0 <= theta & theta < Theta; w := W; }
          ++
          /* or turn left to circle */
          { ?-Theta < theta & theta < 0; w := -W; }}
          };
          ?(!theta=Theta | (dxy=dXY & dz=dZ)) & (!theta=-Theta | (dxy=-dXY & dz=dZ));
        }
        ++
        /* or choose a new safe curve */
        { a :=*; ?-B <= a & a <= A;
          w :=*; ?-W <= w & w <= W;
          v :=*; ?v>=Vmin;
          theta :=*; ?-Theta <= theta & theta <= Theta;
          /* for the chosen a, w, v, theta: worst case position of obstacles wrt. curve  */
          xo :=*;
          yo :=*;
          /* use that curve, if it is a safe one (admissible velocities) */
          ? ((abs(x-xo)>(v^2-Vmin^2)/(2*B)+2*r+(A/B+1)*(A/2*ep^2+ep*v) & abs(x-xo)>(v^2-Vmin^2)/(2*B)+Vmin*((Theta-abs(theta))/W-(v-Vmin)/B)+2*r+(A/B+1)*(A/2*ep^2+ep*v)+Vmin*ep) | (abs(y-yo)>(v^2-Vmin^2)/(2*B)+2*r+(A/B+1)*(A/2*ep^2+ep*v) & abs(y-yo)>(v^2-Vmin^2)/(2*B)+Vmin*((Theta-abs(theta))/W-(v-Vmin)/B)+2*r+(A/B+1)*(A/2*ep^2+ep*v)+Vmin*ep));
        }
      };
      /* reset time */
      t := 0;
    }
    /* dynamics */
    { x' = v * dx,
      y' = v * dy,
      dx' = -dy * (g/v) * (dxy/dz),
      dy' = dx * (g/v) * (dxy/dz),
      dz' = -dxy * w,
      dxy' = dz * w,
      v' = a,
      theta' = w,
      t' = 1 & t <= ep & v >= Vmin & -Theta <= theta & theta <= Theta
    }
    /*@invariant(
      t>=0,
      dx^2+dy^2 = 1,
      dz^2+dxy^2 = 1,
      v = old(v)+a*t,
      theta = old(theta)+w*t,
      more
    )*/
  }* /*@invariant(
      dx^2+dy^2 = 1
      & dz^2+dxy^2 = 1
      & v>=Vmin
      & theta <= Theta
      & theta >= -Theta
      & (((abs(x-xo)>(v^2-Vmin^2)/(2*B)+2*r & abs(x-xo)>(v^2-Vmin^2)/(2*B)+Vmin*((Theta-abs(theta))/W-(v-Vmin)/B)+2*r) | (abs(y-yo)>(v^2-Vmin^2)/(2*B)+2*r & abs(y-yo)>(v^2-Vmin^2)/(2*B)+Vmin*((Theta-abs(theta))/W-(v-Vmin)/B)+2*r))
          | (v=Vmin & theta>=0 & theta<Theta & (abs(x-xo)>Vmin*(Theta-theta)/W+2*r | abs(y-yo)>Vmin*(Theta-theta)/W+2*r))
          | (v=Vmin & theta<0 & theta>-Theta & (abs(x-xo)>Vmin*(Theta+theta)/W+2*r | abs(y-yo)>Vmin*(Theta+theta)/W+2*r))
          | (v=Vmin & theta=Theta & dxy=dXY & dz=dZ & (abs(x-xo-r*dy)>r | abs(y-yo+r*dx)>r))
          | (v=Vmin & theta=-Theta & dxy=-dXY & dz=dZ & (abs(x-xo+r*dy)>r | abs(y-yo-r*dx)>r)))
    )*/
  ] (x-xo)^2+(y-yo)^2 > 0
End.
