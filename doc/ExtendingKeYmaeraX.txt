Adding Special Functions
========================

Augmenting KeYmaera X with additional functions with special meaning is currently best done via adding appropriate function definitions with corresponding lemmas.

Example: addition of abs/min/max functions in edu.cmu.cs.ls.keymaerax.btactics.DerivedAxioms.scala

Adding Operators
================

Adding new built-in operators works as follows:

==Prover Core (soundness-critical)==

Add algebraic datatype to edu.cmu.cs.ls.keymaerax.core.Expression data structures.
Define free/bound/mustbound variables in edu.cmu.cs.ls.keymaerax.core.StaticSemantics.apply or its callees
Define signature in edu.cmu.cs.ls.keymaerax.core.StaticSemantics.signature
Define uniform substitution in edu.cmu.cs.ls.keymaerax.core.USubst.usubst or its callees
Specify axioms or proof rules in edu.cmu.cs.ls.keymaerax.core.AxiomBase

==Parser & Pretty-Printer==

Augment edu.cmu.cs.ls.keymaerax.parser.KeYmaeraXLexer.findNextToken with new tokens for operator (if needed)
Define operator notation and precedence in edu.cmu.cs.ls.keymaerax.parser.OpSpec.op
Augment edu.cmu.cs.ls.keymaerax.parser.KeYmaeraXParser.op with corresponding reverse operator notation lookup.
Augment edu.cmu.cs.ls.keymaerax.parser.KeYmaeraXParser first and follow set lookaheads according to grammar.

Example: the addition of the Dual operator for hybrid games.